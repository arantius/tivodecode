AC_INIT(tivodecode, 0.2pre1)
AC_CONFIG_SRCDIR(tivodecode.c)
AM_INIT_AUTOMAKE
AM_MAINTAINER_MODE
AC_CONFIG_HEADERS(tdconfig.h)
AC_PROG_CC
AC_PROG_CPP
AC_AIX
AC_ISC_POSIX
AC_MINIX
AC_HEADER_STDC
AC_C_INLINE
AC_PROG_RANLIB
AC_PROG_INSTALL

if test x"$ac_cv_c_compiler_gnu" = x"yes"; then
# ICC pretends to be GCC but it's lying; it doesn't support these options.
# So we have to check if "GCC" is really ICC.
AC_TRY_COMPILE([], [@%:@ifndef __INTEL_COMPILER
choke me
@%:@endif], [ICC=[yes]], [ICC=[no]])

  if test "$ICC" = no; then
    CFLAGS="$CFLAGS -Wall -Wpointer-arith -Winline"

    PGAC_PROG_CC_CFLAGS_OPT([-Wdeclaration-after-statement])
    PGAC_PROG_CC_CFLAGS_OPT([-Wendif-labels])
    PGAC_PROG_CC_CFLAGS_OPT([-Werror-implicit-function-declaration])
  fi
  PGAC_PROG_CC_CFLAGS_OPT([-fno-strict-aliasing])
fi

AC_SYS_LARGEFILE
AC_FUNC_FSEEKO
AC_TYPE_OFF_T
AC_CHECK_SIZEOF(off_t)

AC_CHECK_HEADERS([netinet/in.h winsock2.h getopt.h ctype.h], [], [], AC_INCLUDES_DEFAULT([]))
AC_SEARCH_LIBS(getopt_long, [getopt gnugetopt])

dnl BEGIN check for library containing ntohl - based on AC_SEARCH_LIBS
dnl but specific for ntohl to make it work on win32
dnl ntohl check {{{
AC_PREREQ([2.13])
AC_CACHE_CHECK([for library containing ntohl], [ac_cv_search_ntohl],
[ac_func_search_save_LIBS="$LIBS"
ac_cv_search_ntohl="no"
AC_TRY_LINK(dnl
[#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#ifdef HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
],
[ntohl(42)],
[ac_cv_search_ntohl="none required"])
test "$ac_cv_search_ntohl" = "no" && for i in socket wsock32; do
LIBS="-l$i $ac_func_search_save_LIBS"
AC_TRY_LINK(dnl
[#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#ifdef HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
],
[ntohl(42)],
[ac_cv_search_ntohl="-l$i"
break])
done
LIBS="$ac_func_search_save_LIBS"])
if test "$ac_cv_search_ntohl" != "no"; then
  test "$ac_cv_search_ntohl" = "none required" || LIBS="$ac_cv_search_ntohl $LIBS"
fi
dnl }}} END check for library containing ntohl

AC_CHECK_TYPES([struct option], [], [],
[#ifdef HAVE_GETOPT_H
#include <getopt.h>
#endif])

AC_CACHE_CHECK([for optreset], pgac_cv_var_int_optreset,
[AC_TRY_LINK([#include <unistd.h>],
  [extern int optreset; optreset = 1;],
  [pgac_cv_var_int_optreset=yes],
  [pgac_cv_var_int_optreset=no])])
if test x"$pgac_cv_var_int_optreset" = x"yes"; then
  AC_DEFINE(HAVE_INT_OPTRESET, 1, [Define to 1 if you have the global variable 'int optreset'.])
fi

AC_REPLACE_FUNCS([getopt fseeko])

if test x"$ac_cv_type_struct_option" = xyes ; then
  AC_REPLACE_FUNCS([getopt_long])
else
  AC_LIBOBJ(getopt_long)
fi

AC_OUTPUT(Makefile)
