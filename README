tivodecode (c) 2006, Jeremy Drake
CVS Head version
See COPYING for license terms.

To build on a *NIX platform, first check the Makefile, setting CC, CFLAGS and
LDFLAGS as appropriate for your platform.  If your platform has a different way
of building with large file support, correct the DEFINES variable for your
platform.  Then run 'make'.

To build on Windows, a Visual C++ Express 2005 solution file is included.  If
you have a working installation of this compiler, building should be as simple
as opening this solution file and building the tivodecode project.

If you are using the Windows binary download, you may need the Visual Studio
2005 Redisributables from Microsoft, if you do not already have MSVCR80.DLL
installed from some other software.

You now have the option to, rather than specifying the MAK on the command line
every time, to specify it in a config file in your home directory.  Simply put
your MAK in a file called ~/.tivodecode_mak and it will be automatically used
if a MAK is not specified on the command line.  On Windows, the file should be
in your %USERPROFILE% directory, or in c:\ if there is no %USERPROFILE% set.

The parameters (from --help) are documented below.

Usage: ./objects.dir/tivodecode [--help] [--verbose|-v] [--no-verify|-n] {--mak|-m} mak [{--out|-o} outfile] <tivofile>

  --mak, -m        media access key (required)
  --out, -o        output file (default stdout)
  --verbose, -v    verbose
  --no-verify, -n  do not verify MAK while decoding
  --help           print this help and exit

The file names specified for the output file or the tivo file may be -, which
means stdout or stdin respectively

